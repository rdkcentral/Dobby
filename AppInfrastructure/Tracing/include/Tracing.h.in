/*
* If not stated otherwise in this file or this component's LICENSE file the
* following copyright and licenses apply:
*
* Copyright 2020 Sky UK
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//
//  Tracing.h
//
#ifndef TRACING_H
#define TRACING_H

#if defined(AI_ENABLE_TRACING)

#include <perfetto.h>

    // TRACING_CATEGORIES_HEADER should be defined in the top level cmake file
    // and it should contain the absolute path to a header file which includes
    // the categories you want in the trace, see below for an example or
    // https://perfetto.dev/docs/instrumentation/track-events
    #include "@TRACING_CATEGORIES_HEADER@"

    /* the following is some example category config
    PERFETTO_DEFINE_CATEGORIES(
        perfetto::Category("WindowManager")
            .SetDescription("Events from the WindowManager component"),
        perfetto::Category("RuntimeManager")
            .SetDescription("Events from the RuntimeManager component"),
        perfetto::Category("PackageManager")
            .SetDescription("Events from the PackageManager component"),
    );
    */


    // wrapper macros so we can fully disable tracing on release builds
    #define AI_TRACE_EVENT_BEGIN(category, name, args...) \
        TRACE_EVENT_BEGIN(category, name, ##args)

    #define AI_TRACE_EVENT_END(category, args...) \
        TRACE_EVENT_END(category, ##args)

    #define AI_TRACE_EVENT(category, name, args...) \
        TRACE_EVENT(category, name, ##args)

    #define AI_TRACE_EVENT_INSTANT(category, name, args...) \
        TRACE_EVENT_INSTANT(category, name, ##args)

    /*
    #define AI_TRACE_COUNTER(category, name, value) \
        PERFETTO_INTERNAL_TRACK_EVENT(              \
            category, PERFETTO_GET_STATIC_STRING(name), \
            ::perfetto::protos::pbzero::TrackEvent::TYPE_COUNTER, \
            "value", static_cast<int>(value))
    */

#else // defined(AI_ENABLE_TRACING)

    #define AI_TRACE_EVENT_BEGIN(category, name, args...)
    #define AI_TRACE_EVENT_END(category, args...)
    #define AI_TRACE_EVENT(category, name, args...)
    #define AI_TRACE_EVENT_INSTANT(category, name, args...)

#endif // defined(AI_ENABLE_TRACING)


#endif // TRACING_H
